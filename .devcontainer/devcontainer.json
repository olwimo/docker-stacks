// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/python-3-anaconda
{
	"name": "DataScience Notebook",
	// "build": { 
	// 	"context": "..",
	// 	"dockerfile": "Dockerfile",
	// 	"args": {
	// 		"NODE_VERSION": "node",
	// 		"USERNAME": "jovyan"
	// 	}
	// },
	// "dockerComposeFile": "docker-compose.yml",
	// "service": "datascience",
	// "workspaceFolder": "/workspace",
	// "overrideCommand": false,
	// "shutdownAction": "stopCompose",
    "image": "registry.gitlab.com/olwim/containers/datascience-notebook:latest",
	"shutdownAction": "stopContainer",
    "remoteUser": "codespace",
    "containerUser": "codespace",
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [ 80, 8888 ],
    // "oryx build" will automatically install your dependencies and attempt to build your project
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
	"workspaceFolder": "/workspace",
    // "mounts": [
    //     "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    //     "source=minikube-config,target=/home/codespace/.minikube,type=volume",
    //     "source=${localWorkspaceFolder}/.devcontainer/nginx.conf,target=/etc/nginx/nginx.conf,type=bind,consistency=cached,readonly"
    // ],
    // "buildArg": "_VSC_INSTALL_JAVA",
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	"overrideCommand": false,
    // "entrypoint": "/usr/local/share/ssh-init.sh"
    // "entrypoint": "/usr/local/share/docker-init.sh",
    // "postCreateCommand": "oryx build -p virtualenv_name=.venv --log-file /tmp/oryx-build.log --manifest-dir /tmp || echo 'Could not auto-build. Skipping.'",
    // Configure tool-specific properties.

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"python.defaultInterpreterPath": "/opt/conda/bin/python",
				// "python.linting.enabled": true,
				// "python.linting.pylintEnabled": true,
				// "python.formatting.autopep8Path": "/opt/conda/bin/autopep8",
				// "python.formatting.yapfPath": "/opt/conda/bin/yapf",
				// "python.linting.flake8Path": "/opt/conda/bin/flake8",
				// "python.linting.pycodestylePath": "/opt/conda/bin/pycodestyle",
				// "python.linting.pydocstylePath": "/opt/conda/bin/pydocstyle",
				// "python.linting.pylintPath": "/opt/conda/bin/pylint",
				"files.eol": "\n",
				"html.format.endWithNewline": true
			},
			
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"github.vscode-pull-request-github",
				"eamodio.gitlens",
				"redhat.vscode-yaml"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [ 8888 ],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "python --version",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "codespace",
	"features": {
		"docker-from-docker": {
			"version": "latest",
			"moby": true,
			"dockerDashComposeVersion": "v2"
		},
		"kubectl-helm-minikube": {
			"version": "latest",
			"helm": "latest",
			"minikube": "latest"
		},
		"git": "latest",
		"git-lfs": "latest",
		"ruby": "latest",
		"rust": "latest"
		// "jupyterlab": "latest"
	},
    "remoteEnv": { "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}" },
    "init": true,
    // "capAdd": [
    //     "SYS_PTRACE"
    // ],
    // "securityOpt": [
    //     "seccomp=unconfined"
    // ],
	"runArgs": [ "--init", "--env-file", "${localWorkspaceFolder}/.devcontainer/codespace.env", "--gpus", "all" ]
	// "runArgs": [
	// 	"--init",
	// 	"--gpus",
	// 	"all"
	// ]
}
